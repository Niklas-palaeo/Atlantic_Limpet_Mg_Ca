---
title: "Comparison of geochemical datasets for “*Confirmation of Mg/Ca ratios as palaeothermometers in Atlantic limpet shells*”"
format: docx
---


# Overview
These supplementary files include the linescan information for Mg/Ca and $\delta$^18^O records of all analysed [*Patella vulgata*](#Patella) and [*Nacella* sp.](#Nacella) shells, which were analysed to reassess the use of Magnesium to Calcium (Mg/Ca) ratios as palaeothermometers in Atlantic limpet shells. These supplementary files are organised by species and specimen identifiers.


```{r Library and datasets}
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
 
knitr::opts_chunk$set(echo=FALSE,message = FALSE,warning = FALSE)
# Packages
  pacman::p_load(
    here,
    janitor,
    tidyverse,
    cowplot,ggx,ggpubr,
    patchwork,
    RColorBrewer) 
  
  theme_set(theme_cowplot(10))

# Scripts
# source("DTW_Script.R")
source("DTW_Script-update.R")

  
# Files  


D18O <- read_csv(here("data","D18O.csv")) %>% 
  mutate(period=case_when(startsWith(sampleID,"Q") ~ "Archaeological",TRUE ~ "Modern")) %>% 
  mutate(species = case_when(
      startsWith(sampleID, "ND") ~ "Nacella deaureata",
      startsWith(sampleID, "NM") ~ "Nacella magellanica",
      TRUE ~ "Patella vulgata"
    ))

  
MgCa <- read_csv(here("data","MgCa.csv"))

Ferguson_data <- read_csv(here("data","Ferguson-data.csv")) %>% 
  na.omit()


Corr_data <- read.csv(here("data","Corr_data.csv")) 

#This below caused problems
#%>% 
  #   pivot_wider(values_from = "value",names_from = "proxy") %>%
  # left_join(D18O %>% select(sampleID) %>% unique(),by="sampleID") %>%
  # pivot_longer(cols=c(d18o,mg_ca),values_to = "value",names_to = "proxy") %>% 
  # arrange(x)


# # Check overlaps
# # Find common sample IDs
# intersect(MgCa$sampleID, D18O$sampleID)
# 
# # Find sample IDs only in MgCa
# setdiff(MgCa$sampleID, D18O$sampleID)
# 
# # Find sample IDs only in D18O
# setdiff(D18O$sampleID, MgCa$sampleID)

D18O <-   D18O %>% filter(sampleID %in% MgCa$sampleID)

```


```{r}
#| fig-height: 7
#| fig-width: 16

# Calculate the 2.5th and 97.5th percentiles for mg_ca within each sampleID
percentiles <- MgCa %>%
  group_by(sampleID) %>%
  summarise(lower = quantile(mg_ca, 0.025, na.rm = TRUE),
            upper = quantile(mg_ca, 0.975, na.rm = TRUE))

# Function to create the plots
create_plots <- function(sample) {
  lower <- percentiles %>% filter(sampleID == sample) %>% pull(lower)
  upper <- percentiles %>% filter(sampleID == sample) %>% pull(upper)
  
  P1.1 <-
    MgCa %>%
    filter(sampleID == sample) %>%
    filter(relstd < 0.1) %>%
    filter(mg_ca >= lower & mg_ca <= upper) %>%
    ggplot() +
    aes(dist, mg_ca) +
    geom_path() +
    theme_cowplot(17) +
    labs(x = "", y = "Mg/Ca intensity ratio", title = sample)
  
  P1.2 <-
    D18O %>%
    filter(sampleID == sample) %>%
    ggplot() +
    aes(dist, d18O) +
    geom_path() +
    theme_cowplot(18) +
    scale_y_reverse() +
    labs(x = "Distance to edge (mm)", y = expression(paste(delta^{18}, "O (\u2030)")))
  
  
  
   P2.1 <-
    Corr_data %>%
    filter(sampleID == sample) %>%
    filter(proxy == "mg_ca") %>%
    ggplot() +
    aes(x, value) +
    # geom_errorbar(aes(ymin = value - sd, ymax = value + sd, width = 1)) +
    geom_ribbon(aes(ymin = value - sd, ymax = value + sd), alpha = 0.5) +
    geom_path() +
    theme_cowplot(17) +
    labs(x = "", y = "")
  
  P2.2 <-
    Corr_data %>%
    filter(sampleID == sample) %>%
    filter(proxy == "d18o") %>%
          group_by(x) %>% 
      mutate(sd=sd(value)) %>% 
      ungroup() %>% 
    ggplot() +
    aes(x, value) +
    # geom_errorbar(aes(ymin = value - sd, ymax = value + sd, width = 0.2)) +
    geom_ribbon(aes(ymin = value - sd, ymax = value + sd), alpha = 0.5) +
    geom_path() +
    theme_cowplot(18) +
    scale_y_reverse() +
    labs(x = "Warped time index", y = "")
  
    P1.1 / P1.2 |  P2.1 / P2.2 + plot_annotation(tag_levels = "a")
  
  
  
}

# Loop through each sampleID and create the plots
unique_sampleIDs <- unique(MgCa$sampleID)

for(sample in unique_sampleIDs) {
  plot_combined <- create_plots(sample)
  print(plot_combined)
}



```
